cmake_minimum_required(VERSION 3.0)
project(libOHARStudentLayer)
set(LIB_NAME OHARStudentLayer)
include(GNUInstallDirs)
include(CMakePackageConfigHelpers)
find_package(Boost 1.67.0 REQUIRED COMPONENTS system)
if (Boost_FOUND)
   add_library(${LIB_NAME} STATIC CruelGrader.cpp PlainStudentFileHandler.cpp StudentFileWriter.cpp StudentNetOutputHandler.cpp GraderFactory.cpp StudentDataItem.cpp StudentHandler.cpp StudentWriterHandler.cpp GradingHandler.cpp StudentFileReader.cpp StudentNetInputHandler.cpp TheUsualGrader.cpp)
   include_directories(${Boost_INCLUDE_DIR})
   target_link_libraries(${LIB_NAME} ${Boost_LIBRARIES})
   set_target_properties(${LIB_NAME} PROPERTIES COMPILE_FLAGS -fPIC -g -Wall)
   set_target_properties(${LIB_NAME} PROPERTIES LINK_FLAGS -Wl,-lpthread)
   set_target_properties(${LIB_NAME} PROPERTIES CXX_STANDARD 14)
   set_target_properties(${LIB_NAME} PROPERTIES PUBLIC_HEADER "CruelGrader.h;PlainStudentFileHandler.h;StudentHandler.h;TheUsualGrader.h;GradeCalculator.h;StudentDataItem.h;StudentNetInputHandler.h;GraderFactory.h;StudentFileReader.h;StudentNetOutputHandler.h;GradingHandler.h;StudentFileWriter.h;StudentWriterHandler.h")
   target_include_directories(${LIB_NAME} PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}./> $<INSTALL_INTERFACE:include/${LIB_NAME}>)
   install(TARGETS ${LIB_NAME} EXPORT ${LIB_NAME}Config ARCHIVE DESTINATION ${CMAKE_INSTALL_LIBDIR} LIBRARY DESTINATION ${CMAKE_INSTALL_LIBDIR} RUNTIME DESTINATION ${CMAKE_INSTALL_BINDIR} PUBLIC_HEADER DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/${LIB_NAME})
   install(EXPORT ${LIB_NAME}Config FILE ${LIB_NAME}Config.cmake NAMESPACE OHARStudentLayer:: DESTINATION share/${LIB_NAME}/cmake)
   export(TARGETS ${LIB_NAME} FILE ${LIB_NAME}Config.cmake)
endif()
